#include <stdio.h>
#include <stdlib.h>
#include <omp.h>

int main(void){
int arr[6]={2,5,77,6,18,45};
int max=arr[0];
for(int i=1;i<6;i++){
if(max<arr[i]){
max=arr[i];
}
}
printf("%d",max);
return 0;
}



#include <mpi.h>
#include <stdio.h>

int main(int argc, char** argv) {
    // 1️⃣ Initialize the MPI environment
    MPI_Init(NULL, NULL);

    // 2️⃣ Get the number of processes
    int world_size;
    MPI_Comm_size(MPI_COMM_WORLD, &world_size);

    // 3️⃣ Get the rank of the process
    int world_rank;
    MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);

    // 4️⃣ Get the name of the processor
    char processor_name[MPI_MAX_PROCESSOR_NAME];
    int name_len;
    MPI_Get_processor_name(processor_name, &name_len);

    // 5️⃣ Print a hello world message
    printf("Hello world from processor %s, rank %d out of %d processors\n",
           processor_name, world_rank, world_size);

    // 6️⃣ Finalize the MPI environment
    MPI_Finalize();

    return 0;
}
